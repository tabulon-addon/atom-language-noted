
# [language-noted] is a grammar package which helps highligting specially marked up stuff in ;#comments.
# It has the same purpose (but not the same approach) as [language-TODO] and its derivatives.
#
# Those packages employ a ;#hard-coded list of words to highlight.
#
# [language-noted] takes a different approach, letting the comment author choose the 'spirit' in which
# that particlar word will be +@styled, thanks to a very +#simple twitter-style ;#syntax as shown below.
# --------------------------------
#
# The grammar is extremely simple: Just prefix a twitter-style ;#hashtag or ;@mention with a special character
# that depicts how you feel about the stuff you are referring to.
# Perhaps you stumpled upon something +@good, -@bad, or _#spooky that you would like your colleagues or your future
# self to easily notice. Or perhaps you are in a ?#curious mood? Or maybe you've got yet another task :@TODO...
# --------------------------------
#
# Below are a bunch of tokens for a quick reference and also a brief visual test for [language-noted].
#
# ~@AUTHOR @@MENTION   #@HASHTAGGY :@EAGER ,@BLAND ;@DULL &@VERBOSE +@GOOD ?@QUESTION  >@PERTINENT !@ALERT *@FISHY -@BAD %@SHAKY _@SPOOKY @NONE
# ~#AUTHOR @#MENTIONNY ##HASHTAG   :#EAGER ,@BLAND ;@DULL &@VERBOSE +#GOOD ?#QUESTION  >#PERTINENT !#ALERT *#FISHY -#BAD %#SHAKY _#SPOOKY #NONE
#
# Angle bracketed strings, like +@<this one> should also be supported.
#
# RADAR:  <radar://issue/124> (radar links are always rendered the same as >@PERTINENT)

#
# Anyway, +@ENJOY yet another -#overkill, brought to you by ~@TABULO.
#
name: 'NOTED'
scopeName: 'text.noted'
injectionSelector: 'comment, text.plain'
patterns: [
  { include: '#notelet' }
  { include: '#radar'   }
]


repository: {
  notelet: {
    # WORKS, but without quote-like support.
    # comments below serve as a visual aide for developing/debuggig the regex.
    #  <> : CAPTURING GROUPS
    #  {} : NON-CAPTURING GROUPS
    # 0..9A-Z : match {back}refences
    comment: '<{     }<<<<                     > ><{       } >><<<    ><<{           } >>>>>  >'
    comment: '0{     }1234                     4 35{       } 52678    89A{           } A9761  0'
    match:   '(?<!\\w)(((([%_\\-*!>+?:\\,;&~#@])+)((?:[0-9])?))((([#@])(((?:\\w|[\\-])+)))))\\b'

    captures:
      1: name: 'meta.notelet.text.noted'
      2: name: 'punctuation.definition.notelet.spirit.term.text.noted'
      3: name: 'punctuation.definition.notelet.spirit.designator.text.noted'
      4: name: 'punctuation.definition.notelet.spirit.marker.text.noted'
      5: name: 'punctuation.definition.notelet.spirit.vigor.text.noted'
      6: name: 'meta.notelet.reference.text.noted'
      7: name: 'markup.standout.spirit-marker-${4:/downcase}.vigor-${5:/downcase}.text.noted'
      8: name: 'punctuation.definition.notelet.reftype.text.noted'
      9: name: 'meta.notelet.label.text.noted'
     10: name: 'entity.name.tag.notelet.text.noted'
  }

   # For language-TODO emulation.
  radar: {
    match: '<(ra?dar:/(?:[/](?:problems?|issues?|tickets?|bug-reports?|bugs?|reports?))/(?:[&0-9 \\-.%\,;A-Aa-z_]+))>'
    name: 'storage.type.class.radar.spirit.pertinent.text.noted'
    captures:
      1: name: 'markup.underline.link.radar.standout.spirit-pertinent.text.noted'
  }


}
